When would you want to use a remote repository rather than keeping all your work local?
  when you're collaborating with others, when you want to share your work with the world, when you might 
  want to access the work from another computer

Why might you want to always pull changes manually rather than having Git automatically stay up-to-date with your remote repository?
	You may be making changes in your remote repository that you're not ready to share with the world
	yet. Manually pulling changes allows you better control over what's shared with people other than
	yourself.

Describe the differences between forks, clones, and branches. When would you use one instead of another?
	forks: create a copy of another user's respository w/ a reference to the original. useful when you 
		another version of a project, while attributing the original author.
	clones: create a copy of a repository, w/ no reference to the original. useful if you're just
		playing around with a project locally
	branches: a different version of a project in the same repository. useful if you're testing a 
		new feature, experimenting, or wanting to track a different version

What is the benefit of having a copy of the last known state of the remote stored locally?
	So you can compare any changes and determine if it's prudent to commit and push any changes.

How would you collaborate without using Git or GitHub? What would be easier, and what would be harder?
	the team would probably need to send files back and forth by email or dropbox or something. it 
	would be more time-consuming, since there wouldn't be a method to easily view changes; the 
	developer would need to outline anything they did. i don't see it being easier to collaborate
	w/o git & github

When would you want to make changes in a separate branch rather than directly in master? What benefits 
does each approach have?
	if you're using the branch to introduce a new feature or function, and don't want to change the 
	master code.